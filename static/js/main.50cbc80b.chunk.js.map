{"version":3,"sources":["components/organisms/location/index.js","components/templates/AppHeader/index.js","components/atoms/card/square.js","components/atoms/card/rectangle.js","components/molecules/metricInfo/index.js","components/organisms/weather/index.js","components/organisms/pollution/index.js","components/templates/AppBody/index.js","pages/home/index.js","Services/GeoLocation/index.js","Services/AirQualityMetrics/index.js","App.js","index.js"],"names":["Location","props","message","location","city","state","country","stateName","style","backgroundImage","className","id","AppHeader","airMetricsStore","locationMetric","Square","label","value","Rectangle","MetricInfo","data","type","squareCard","rectangleCard","map","item","index","basePath","imagesPath","cloud","sunny","snow","thunder","night","clear","getImage","ic","Weather","hu","pr","tp","ws","metrics","class","pollutionMetricMapping","green","imagePath","level","moderate","unhealthy","unhealthySensitive","veryUnhealthy","hazardous","pollutants","p2","p1","o3","n2","s2","co","Pollution","aqius","mainus","mainPollutant","getCurrentPollutionLevel","alt","src","AppBody","current","weatherData","weather","pollutionLevelData","pollution","getAirMetrics","GeoLocationService","AirQualityMetricService","a","geoLocationServiceResponse","coords","airQualityMetricResponse","Home","useState","setAirMetricsStore","useEffect","result","getData","Object","keys","length","Eclipse","size","getPosition","Promise","resolve","reject","navigator","geolocation","getCurrentPosition","position","success","err","console","error","latitude","longitude","axios","get","process","response","status","Error","log","App","GeoLocation","AirQualityMetrics","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.50cbc80b.chunk.js","sourcesContent":["import './index.css';\n\nconst Location = (props) => {\n    const { message, location } = props;\n    const { city, state, country} = location;\n    let stateName = `${state},`;\n    const imagePath = '/images/title.png'\n    const style = { backgroundImage: `url(${imagePath})` };\n\n    if (city === state) stateName = '';\n\n    return (\n      <div className=\"col-md-12\" style={style}>\n        <h3 id=\"header-title\">{message} {city}, {stateName} {country}  </h3>\n      </div>\n    );\n}\n\nexport default Location;\n","import './index.css';\nimport Location from '../../organisms/location/index.js';\n\nconst AppHeader = (props) => {\n    const { airMetricsStore } = props;\n    const { city, state, country} = airMetricsStore;\n    const locationMetric = {\n      city,\n      state,\n      country\n    };\n    const message = 'Welcome to AirQual, You are nearby';\n\n    return (\n      <Location\n        message={message}\n        location={locationMetric}\n      />\n    );\n}\n\nexport default AppHeader;\n","import './index.css';\n\nconst Square = (props) => {\n    const { label, value } = props;\n    return (\n        <div className=\"card\" >\n            <h1>\n            <span className=\"enclosed\">{label}</span>{value}\n            </h1>\n        </div>\n    )\n}\n\nexport default Square;\n","import './index.css';\n\nconst Rectangle = (props) => {\n    const { label, value } = props;\n    return (\n        <div className=\"card width-extend\" >\n        <h1>\n        <span className=\"enclosed\">{label}</span>{value}\n        </h1>\n    </div>\n    )\n}\n\nexport default Rectangle;\n","import './index.css';\nimport { SquareCard, RectangleCard } from '../../atoms/card/index.js';\n\nconst MetricInfo = (props) => {\n  const { data, type } = props;\n  const { squareCard, rectangleCard } = data;\n\n  return (\n    <>\n      <h3 className=\"heading\">{type}</h3>\n      <div className=\"outer\">\n        <div className=\"wrapper\">\n            {\n            squareCard.map((item, index) => (\n              <SquareCard\n                key={index}\n                label={item.label}\n                value={item.value}\n              />\n            ))}\n            {\n            rectangleCard.map((item, index) => (\n              <RectangleCard\n                key={index}\n                label={item.label}\n                value={item.value}\n              />\n            ))}\n        </div>\n      </div>\n    </>\n  )\n}\n\nexport default MetricInfo;\n","import './index.css';\nimport MetricInfo from '../../molecules/metricInfo/index.js';\n\nconst basePath = './images/weather';\nconst imagesPath = {\n  cloud: `${basePath}/cloud.png`,\n  sunny: `${basePath}/sunny.png`,\n  snow: `${basePath}/snow.png`,\n  thunder: `${basePath}/thunder.png`,\n  night: `${basePath}/night.png`,\n  clear: `${basePath}/clear.png`,\n};\n\nconst getImage = (ic) => {\n  if (ic === '01d') {\n    return imagesPath.sunny;\n  }\n\n  if (ic === '01n') {\n    return imagesPath.night;\n  }\n\n  if (ic === '02d' || ic === '02n') {\n    return imagesPath.clear;\n  }\n\n  if (ic === '03d' || ic === '04d') {\n    return imagesPath.cloud;\n  }\n\n  if (ic === '09d' || ic === '10d' || ic === '10n' || ic === '11d') {\n    return imagesPath.thunder;\n  }\n\n  if (ic === '13d') {\n    return imagesPath.snow;\n  }\n\n  return imagesPath.clear;\n}\n\nconst Weather = (props) => {\n  const { data, label } = props;\n  const { hu, ic, pr, tp, ws } = data;\n  const style = { backgroundImage: `url(${getImage(ic)})` };\n  const squareCard = [{\n    label: 'Temperature',\n    value: `${tp}°c`,\n  },\n  {\n    label: 'Wind Speed',\n    value: `${ws}m/s`,\n  },\n  {\n    label: 'Atmospheric Pressure',\n    value: `${pr}hPa`,\n  },\n  {\n    label: 'Humidity',\n    value: `${hu}%`,\n  }];\n\n  const metrics = {\n    squareCard,\n    rectangleCard: [],\n  };\n\n  return (\n    <div style = {style} class=\"metrics-info\">\n      <MetricInfo\n        type={label}\n        data={metrics}\n      />\n    </div>\n  )\n}\n\nexport default Weather;\n","import './index.css';\nimport MetricInfo from '../../molecules/metricInfo/index.js';\n\nconst basePath = './images/pollution';\nconst pollutionMetricMapping = {\n  green: { imagePath: `${basePath}/green.png`, level: 'Green' },\n  moderate: { imagePath: `${basePath}/moderate.png`, level: 'Moderate' },\n  unhealthy: { imagePath: `${basePath}/unhealthy.png`, level: 'Unhealthy' },\n  unhealthySensitive: { imagePath: `${basePath}/unhealthySensitive.png`, level: 'Unhealthy For Sensitive Groups' },\n  veryUnhealthy: { imagePath: `${basePath}/veryUnhealthy.png`, level: 'Very Unhealthy' },\n  hazardous: { imagePath: `${basePath}/hazardous.png`, level: 'Hazardous' },\n};\n\nconst pollutants = {\n  p2: 'PM2.5',\n  p1: 'PM10',\n  o3: 'O3',\n  n2: 'NO2',\n  s2: 'SO2',\n  co: 'CO',\n}\n\nconst getCurrentPollutionLevel = (aqius) => {\n  if (aqius >= 0 && aqius <= 50) {\n    return pollutionMetricMapping.green;\n  }\n\n  if (aqius >= 51 && aqius <= 100) {\n    return pollutionMetricMapping.moderate;\n  }\n\n  if (aqius >= 101 && aqius <= 150) {\n    return pollutionMetricMapping.unhealthySensitive;\n  }\n\n  if (aqius >= 151 && aqius <= 200) {\n    return pollutionMetricMapping.unhealthy;\n  }\n\n  if (aqius >= 201 && aqius <= 300) {\n    return pollutionMetricMapping.veryUnhealthy;\n  }\n\n  if (aqius >= 301 && aqius <= 500) {\n    return pollutionMetricMapping.hazardous;\n  }\n\n  return pollutionMetricMapping.moderate;\n}\nconst Pollution = (props) => {\n  const { data, label } = props;\n  const { aqius, mainus } = data;\n  const mainPollutant = pollutants[mainus];\n  const { imagePath, level } = getCurrentPollutionLevel(aqius);\n\n  const style = { backgroundImage: `url(${imagePath})` };\n  const squareCard = [{\n    label: 'Quality index',\n    value: `${aqius} US`,\n  },\n  {\n    label: 'Main Pollutant',\n    value: mainPollutant,\n  }];\n  const rectangleCard = [{\n    label: 'Pollution level',\n    value: level,\n  }];\n\n  const metrics = {\n    squareCard,\n    rectangleCard\n  };\n\n  return (\n    <div style = {style} class= \"metrics-info\">\n      <MetricInfo\n        type={label}\n        data={metrics}\n      />\n      <div id=\"imageView-horizontal\">\n        <img alt=\"\" id= \"image-horizontal-info\" src=\"./images/pollution/faces.png\" />\n      </div>\n\n      <div id=\"imageView-vertical\">\n        <img alt= \"\" id=\"image-vertical-info\" src=\"./images/pollution/vertical_faces.png\" />\n      </div>\n    </div>\n  )\n}\n\nexport default Pollution;\n","import Weather from '../../organisms/weather/index.js';\nimport Pollution from '../../organisms/pollution/index.js';\nimport './index.css';\n\nconst AppBody = (props) => {\n    const { airMetricsStore } = props;\n    const { current } = airMetricsStore;\n    const label1 = 'Weather';\n    const label2 = 'Pollution';\n\n    const weatherData = current.weather;\n    const pollutionLevelData = current.pollution;\n\n    return (\n      <div className =\"row\">\n\n\n        <div className =\"col-md-6 padding-zero\">\n          <Weather\n            data={weatherData}\n            label={label1} />\n        </div>\n\n        <div className =\"col-md-6 padding-zero\">\n          <Pollution\n            data={pollutionLevelData}\n            label={label2} />\n        </div>\n      </div>\n    );\n}\n\nexport default AppBody;\n","import AppHeader from '../../components/templates/AppHeader/index.js';\nimport AppBody from '../../components/templates/AppBody/index.js';\nimport './index.css';\nimport React, { useState, useEffect } from 'react';\nimport { Eclipse } from \"react-loading-io\";\n\nconst getAirMetrics = async(GeoLocationService, AirQualityMetricService) => {\n  let airQualityMetricResponse;\n  const geoLocationServiceResponse = await GeoLocationService();\n  if (geoLocationServiceResponse.data) {\n    airQualityMetricResponse = await AirQualityMetricService(geoLocationServiceResponse.data.coords);\n  }\n\n  return airQualityMetricResponse;\n}\n\nconst Home = (props) => {\n  const { GeoLocationService, AirQualityMetricService, } = props;\n  const [airMetricsStore, setAirMetricsStore] = useState({});\n\n  useEffect(() => {\n      const getData = async () => {\n        const result = await getAirMetrics(GeoLocationService, AirQualityMetricService);\n        setAirMetricsStore(result.data);\n      };\n\n      getData();\n  },[]);\n\n  const renderAirMetricsTemplate = () => {\n    return (\n      <div className =\"container-fluid\">\n        <div className =\"row app-header\">\n            <AppHeader\n              airMetricsStore={airMetricsStore}\n            />\n        </div>\n        <div className =\"row app-body\">\n            <AppBody\n              airMetricsStore={airMetricsStore}\n            />\n        </div>\n      </div>);\n  }\n\n  const renderZeroStateAirMetricsTemplate = () => {\n    return <Eclipse size={250} />;\n  }\n\n  const renderHomeTemplate = () => {\n    if(Object.keys(airMetricsStore).length > 0) {\n      return renderAirMetricsTemplate();\n    }\n\n    return renderZeroStateAirMetricsTemplate();\n  }\n\n  return (\n    <div className= \"home\">\n      {renderHomeTemplate()}\n    </div>\n  );\n}\n\nexport default Home;\n","const GeoLocationService = async() => {\n    try {\n        function getPosition() {\n            return new Promise((resolve, reject) =>\n                navigator.geolocation.getCurrentPosition(resolve, reject)\n            );\n        }\n\n        const position = await getPosition();\n\n        return {success: true, err: null, data: position};\n    } catch (err) {\n        console.error(err.message);\n\n        return {success: false, err: err, data: {}};\n    }\n}\n\nexport default GeoLocationService;\n","import axios from 'axios';\n\nconst AirQualityMetricService = async (data = {}) => {\n    try {\n        const { latitude, longitude } = data;\n        let response = await axios.get(`${process.env.REACT_APP_API_TLD}/v2/nearest_city?lat=${latitude}&lon=${longitude}&key=${process.env.REACT_APP_API_ACCESS_KEY}`);\n\n        if  (response.data && response.data.status === 'success') {\n            return {success: true, error: null, data: response.data.data};\n        }\n\n        throw new Error('Error in api end point');\n    } catch(err) {\n        console.log('err', err);\n        return {success: false, error: err, data: {}};\n    }\n}\n\nexport default AirQualityMetricService;\n","import Home from './pages/home/index.js';\nimport { GeoLocation, AirQualityMetrics, } from './Services';\n\nconst App = () => (\n<Home\n    GeoLocationService={GeoLocation}\n    AirQualityMetricService={AirQualityMetrics}\n/>\n);\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n"],"sourceRoot":""}